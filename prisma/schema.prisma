// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MasterAdmin {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  studios   Studio[]
}

model Studio {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String    
  phone           String?   
  logoUrl         String?
  isActive        Boolean   @default(true)
  subscriptionTier String   @default("Free")
  dateFormat      String    @default("MM/DD/YYYY")
  paymentStatus   String?   // Keep existing column
  storage         BigInt?   // Keep existing column as is
  storageUsed     BigInt?   // Make it optional initially
  trialEndsAt     DateTime? // New column for trial end date
  marketingConsent Boolean  @default(false) // Track marketing email preferences
  
  // Contact Person fields
  contactName     String?
  contactEmail    String?
  contactPhone    String?
  contactPosition String?
  
  // Studio Details fields
  website         String?
  industry        String?
  address         String?
  studioSize      String?
  
  // Relations and timestamps
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  clients         Client[]
  projects        Project[]
  masterAdminId   String?   
  masterAdmin     MasterAdmin? @relation(fields: [masterAdminId], references: [id])

  @@index([masterAdminId])
}

model Client {
  id        String    @id @default(cuid())
  name      String
  email     String?   
  phone     String?   
  company   String?   
  urlSlug   String?   @unique
  studioId  String?   
  studio    Studio?   @relation(fields: [studioId], references: [id])
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([studioId])
}

model Project {
  id                String   @id @default(cuid())
  name              String
  status            String   @default("בתהליך")
  thumbnailUrl      String?
  googleDriveFolderId String?
  videoLink         String?
  cost              Float
  paymentStatus     String   @default("UNPAID")
  lastUpdate        DateTime @default(now())
  studioId          String?  
  studio            Studio?  @relation(fields: [studioId], references: [id])
  clientId          String?  
  client            Client?  @relation(fields: [clientId], references: [id])
  sections          Section[]
  heroPhoto         String?
  videos            Json?    @default("[]")
  photos            Json?    @default("[]")
  title             String?
  description       String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  media             Media[]

  @@index([studioId])
  @@index([clientId])
}

model Section {
  id        String   @id @default(cuid())
  name      String
  heroPhoto String?
  videos    Json?    @default("[]")
  photos    Json?    @default("[]")
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

model Media {
  id          String   @id @default(cuid())
  url         String
  type        String   // 'image' | 'video' | 'document'
  filename    String
  size        Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  projectId   String?
  project     Project? @relation(fields: [projectId], references: [id])
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  avatar    String?
  media     Media[]
}
